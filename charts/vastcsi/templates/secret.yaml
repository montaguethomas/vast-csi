{{/* Credentials for comminication with Vast Cluster host */}}

{{- $credentials_checksum := printf "%s" (include "vastcsi.credentialsChecksum" .) | trim -}}
{{- $existing_sec := ( lookup "v1" "Secret" .Release.Namespace "csi-vast-mgmt" ) -}}

apiVersion: v1
kind: Secret
metadata:
  name: csi-vast-mgmt
  namespace: {{ include "vastcsi.namespace" . }}
  labels:
  {{- include "vastcsi.labels" . | nindent 4 }}
  annotations:
    checksum/vast-mgmt-secret: {{ $credentials_checksum }}
type: Opaque
data:
  {{- if not $existing_sec }}
  username: {{ required "username is required" .Values.username | b64enc | quote }}
  password: {{ required "password is required" .Values.password | b64enc | quote }}
  {{- else }}
  {{- $existing_checksum := get $existing_sec.metadata.annotations "checksum/vast-mgmt-secret" -}}
  {{- if and .Values.username .Values.password ( ne $existing_checksum $credentials_checksum ) }}
  username: {{ .Values.username | b64enc | quote }}
  password: {{ .Values.password | b64enc | quote }}
  {{- else }}
  username: {{ $existing_sec.data.username }}
  password: {{ $existing_sec.data.password }}
  {{- end }}
  {{- end }}

---

{{- $ssl_checksum := printf "%s" (include "vastcsi.sslChecksum" .) | trim -}}
{{- if ne $ssl_checksum ( quote "" )   }}
{{- if not ( contains "-----BEGIN CERTIFICATE-----" .Values.sslCert ) -}}
  {{- fail "Invalid sslCert. Use `helm install ... --set-file sslCert=< path to sslCert >` to provide valid certificate" -}}
{{- else if not .Values.verifySsl -}}
  {{- fail "When sslCert is provided `verifySsl` must be set to true." -}}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: csi-vast-vms-authority
  namespace: {{ include "vastcsi.namespace" . }}
  labels:
  {{- include "vastcsi.labels" . | nindent 4 }}
  annotations:
    checksum/vast-vms-authority-secret: {{ $ssl_checksum  }}
type: Opaque
data:
  sslCert: |-
    {{ .Values.sslCert  | b64enc }}
{{- end -}}
